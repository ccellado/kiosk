package kiosk.oraclepool

import kiosk.ECC
import kiosk.ergo._
import org.scalatest.{Matchers, PropSpec}

class FixedEpochPoolDemo extends PropSpec with FixedEpochPool with Matchers {
  val minBoxValue = 2000000
  override lazy val livePeriod = 4 // blocks
  override lazy val prepPeriod = 4 // blocks
  override lazy val buffer = 2 // blocks

  override lazy val oracleTokenId: Array[Byte] = "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed".decodeHex
  override lazy val poolTokenId: Array[Byte] = "b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc".decodeHex

  override lazy val oracleReward = 2000000 // Nano ergs. One reward per data point to be paid to oracle
  lazy val addresses = Seq(
    "9iHunbPfq8ARpiJXc4vjmwvseeHWjmgeC797vSrdHSLNKxvKsYo",
    "9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF",
    "9ebeQK9oJpDpTZSfqk6wdaHt3x1aUUba9S8dMufTpyQQYvE2XKU",
    "9fcrXXaJgrGKC8iu98Y2spstDDxNccXSR9QjbfTvtuv7vJ3NQLk"
  ).toArray

  override lazy val minPoolBoxValue = oracleReward * (addresses.size + 1) + minBoxValue // how much min must exist in oracle pool box

  override lazy val oraclePubKeys = addresses.map(ECC.addressToGroupElement)

  property("Addresses check") {
    println("minPoolBoxValue " + minPoolBoxValue)
    println(s"Live Epoch script length       : ${liveEpochErgoTree.bytes.length}")
    println(s"Live Epoch script complexity   : ${liveEpochErgoTree.complexity}")
    println(s"Epoch prep script length       : ${epochPrepErgoTree.bytes.length}")
    println(s"Epoch prep script complexity   : ${epochPrepErgoTree.complexity}")
    println(s"DataPoint script length        : ${dataPointErgoTree.bytes.length}")
    println(s"DataPoint script complexity    : ${dataPointErgoTree.complexity}")
    println(s"PoolDeposit script length      : ${poolDepositErgoTree.bytes.length}")
    println(s"PoolDeposit script complexity  : ${poolDepositErgoTree.complexity}")

    println("liveEpochAddress: " + liveEpochAddress)
    println("epochPrepAddress: " + epochPrepAddress)
    println("dataPointAddress: " + dataPointAddress)
    println("poolDepositAddress: " + poolDepositAddress)
    println("EpochPrepErgoTree: (for R6) " + KioskErgoTree(epochPrepErgoTree).serialize.encodeHex)

    liveEpochAddress shouldEqual "nfG4QYj5aagKMAFQWmvyz3p9LRdii4FxmmFVdBfZzpv7tPADLUFvJVt3TanxuMivS5DGknRiwbYT7nnnHrNXiYQA3bVfhkVRJfW5HHSCKm577Ed7FQmT4ReLjUA2AbaQtJTtA5TSyrznBx1y71WAsQJJ48SX4G1ydd6PQhYa5nWJRKXBbFzrMMaUUKdR5unXsvg4WWa9mKmdztFtcsLLoSpM3nRLEMz4HziFuMJ4WTefqWwGgueEQm5rouB4Zv94XBUnSrKJs7UyE4A5t9XfthRszmXHd4bpaqt9odmYTvTgZZYdiwnHGedEBJNiG9VHSAEYFbg1c4shDvqui9Z7d9GYpiVHNk6dWQtvW1ywxScvTdXAxjShqCqgmJ6QD5CQM6R1FadPNtBRnf3tq35NVBoh72inGwHkBKJgtiNETgiUXDuK2FL7eoFdU5tSozNf6k7Mw9esQH3KkWSy6HKTw2XobKtbyPM3vJAHzSK79pXFYoM9v2riVoYvfvTDqeQocVCsTeAwc4jwX6VY6Gz1i1wrovMCPaErcqWBbrWnNS2D5w6EYyX7FxhkMcJbPJGPZQMsoMEiKDvHyY48MNro2yFJtxPF6nD4kgFqQ1twsq7TLr1StTKakzQLeJ"
    epochPrepAddress shouldEqual "37PviZi28M6oacKQfNwbmS2emFibqp7HraB3SRCkrofs8TFvAxLBeXH5fnDzL8gaLKQW4JAuttyEGQpMALq6qnH2ZuHwg7G7qrwsznYXXpwcJE2Bsse2HbBetNMskWtWM1ZBYd6ktV7wyMtbfx73Q34t1S5wDPTP1LsgGwGZAZmDQGWr7FSvawAEVzHENNwd31iKeuqa5uNpahPrVisWVWxgRPejzmEED9iRTG3Ebpn9i5vPteuqozz9Q6kXQ6RBxRGPSpRKHq15PRLcdqrTWdZuRwqaQgRY1kRhU1rzffTYoq5w58PWeg8BqDegtd5X8NXNrnTiVh38iU5XmunvN4Q827rptjgAmCiw1GZs6cnzS5zXFEuRfqvah8CVitiHkrkKPZusGpE3Z6bz21JsfK4TcAZXvsAyWSK7inXLiAHhNWKpMDweUzDdUPu2QQ2sDqL6ts6D3wX4gv6C7q6Te4hinjZiPBnP9efYjwAKny7X8HCYUAqK6kMBXerLtrpanXL5ayP33qXJqRVayD1pXEmHAyvKrjRWK9mZ9H6vZHygh5mrMPubm7Aud4nMyKaTiHizwRmzSmr1TKymt26r2yFaNqAVq9HXjao8JrQMuEU7RURFDzie7nNJUPTMhkF2MykkFUoH9R8fDKfFg8kb7WTBM7kMGfKf6dJVR2bQVXVq1nNQxGLkxFL88REfhxA5D88AMSJR5LqXtC7N2h4tafXhfYkxHMttVW9QRpf2H4dcG186LaKABg62Yra9UUR4Qp2kNFmi9H13eFFSNB26zPPGcGqjVRc2MGAEeP3oeZpxpMzMtGB8jNMcodz3MxhRfxwpLa6wo5gGoRQ2n88iEzF8bo2BitEmce2iiy1qujgfryTQTEjXVVHoprfkjwbT3yXXGx1CMBVL1dUHunN8iFbEpwxgPc19SfJuL7yox1YTSfy75c8y9yuNKfgc2wCipB7PCDJvE7NyJp99LKrnzae"
    dataPointAddress shouldEqual "6bdPimFp6NBbR8kxWCcrpjvHumPcahQZEFXYKhQ7ztR5c42WAZ6f1jKddrPXSTn3k9teZUL1deviXgyh8pkr4nH8mthu8C8unKo1jVtuM5QnohtsANGH2N9Rk4wHm1Q21LosXt93BfpaoScnVh8UkpX7gdAPGEWTWP5QEMikeHrUiUKeEeL6nLZDaFsDzApzG1ub9qRCEbUHQQNESketNERS8ir2i8JTAjDqwhFfoSWxeKmJLhrWeKvp8WaG1FmWAbPs4a3qayGL4bPWvRXGhXxJ8s1HqEZFuEBbnGYPw69XvgRnF7pZghEqBQbGpBeXzCj283QALwLbm7txEyNWpstvNkv2AdXJSBK15i2a8hcjboC9EKfaHV8GM8i3MLNXpvw36TGiB9ViLF52H1wEFNPnHuxLw1cMS4YAVwDhvE5vJRCGGjXytnWSVaBXqRLQdFpt5tzdzwjxuReMyTKfAGhkcgdRbV8X52zUuMuw464bDQkAS5MVcqYdqoYo4oqkw2EL2EXYWbX9SnUuFzfAHfeWPjwasCWfSKj4epST1KNR4h2ZKiko2NAUGYj24mqHFfCK8FyfZb4RQstHE4fuWNsoL5xiTAdnsmCZx2eiMSa4jnW7HeJZevh68YES29nfa2RM5JPpV8Mz6seZ5LcsAaP6h8YhNkaWwAbHq1Qcv2d5zAZ7e6aHi7NibMGP923h3n6yvodMM9HQv5DzjAJ6euN8q9KFuYznEkBjgJu1TDBtLFwUvfXzykDT5ZzcAr8JrL4iP1rpFMk26Ab2UW8WYtAFPAp48bZr2F5pZPK2BY3nAS7RoRV3NXqxTy4NQD2XJY2Kqa"
    poolDepositAddress shouldEqual "MKmMohtijTfLopz2Wssb4vk42iUjUzBUKbPVDnjzQDfgfmcf4JqQgMur6gPbJg4eZCo65coys4iTZYKccs639psFJ84ZAF2DjXWVtmLyPYyf6bSsD6NSJXBzoHxadHFF5f9owk2GTfssMRqkDpDwvhSWnPmSAJJfi8Wa5KPwxBB6SZZ5rJyhvPt7fQdZ3BcdhDfEcBiPMwG9nuZgvjcbstZ881HVhRcbhXGn6Zabw4rkbv1KcarDdhNGFF4LPB33fbmVWPGrSU2v9kdzjDJPp2uAQQZvvwqfXyMN99LtKDF5639Fm83TMtxSNVTuJqARdDnw8qioqWXjXYymi32F2e7PomyGPJeMPotpdbdd5dnWuVWHXEDgVmfU1jp55f1DQ7abv8kjHQCj4zmWFqkpEevPsCHoW4UPKHKnoF4HB4fagrWETWPzXxBJnEi3mRWyuFmci4ymjdSqiy585cpnmK11VKcbtbvHHgAarZsUGn6ezMjjjkmvN3M8UdSrkwDZ7kpQeY33N8yfnvrsp3mKKALiTy32LEH79BZUrSCjqWRGGV84FXFa1sxDs5kfod6iH1EwvoD4hpLHVMtaMAhoU9cqveNdtDA7757mVESYPxscca1eLMUxqGmjCq2fquouqQtdSmX8gpNasv8Ds1bz35JTCCVGbeBnS3rF3UBcSTzRy87Bi2Waf3rCYbMziLWBvmNCmkZTAnKxvadh7WyCowYnvWuw3Wt4Sm2BMvsxAXk1VGgF33VAumuSbmjJ5bZqJ9dwoQC8rL5MNiNMZEqoFEkNWu9NYLZaGvs18fz1NhdxGzJ9TsGxmQEA6Q9FqGkuzCdigzuVUvNZdQTQNB11Spr4zp4v9QebDViRCPWU5vmrfjWWFPkeWere7De4gmgVf86F4h8xShhJdfjt52ad6A2J8P69RYZaRkypjKnMx5am2UGxg6KqPNCikCpTUW4ko3zfq5U3UxXE4XEnDpZ5y6C291PHhh8UyU8UEFab8WdNu38F5taLS2PhameNBV7r1JGyReQ9WXjLCRa1uzZEeD4irurKZu5tXC5kG9UfNgCAaekqg2xBDFtRYRtFTnQSJTpKQgGzTcuGD1W2JZZTBDJjScMyGRZ7tpgyvUmMyFdUn3nT3rTzfHmmyPkJvG6PKdiqH3oWm7n7fAihp15uzgx"
    epochPrepErgoTree.bytes.encodeHex shouldEqual "10070580dac40904000ecc03100f040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004100580dac4090402048092f401040201010402058092f401130403f0ecb25ce2cc3b73d2da7fcf16cecee23f7d5175d1b82fcc5106399beb13bcc5029f2230dbe53f6b84d8a884a3407c3dffe43daf8037445441be7cdcd261feeaa4020a68bdfc28b7cb16ee37e1d74b399bc768550e3f04575fb275e3e2d61bd7d85e0290d9bbac88042a69660b263b4afc29a2084a0ffce4665de89211846d42bb30e40400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad730dd9010507cd7205730e000410040804080404d807d601e4c6a70504d602c1a7d6039272027300d604b2a5730100d605c2a7d606ed93e4c67204060e720593c272047302d6079aa37303eb02eb02d1ededededededed8fa3720191a39a99720173047305720393e4c672040405e4c6a7040593e4c672040504720193db63087204db6308a792c1720472027206d1ededededededed92a37201720393e4c672040405e4c6a7040592e4c672040504720790e4c6720405049a7207730693db63087204db6308a792c1720472027206d1edededed93e4c672040405e4c6a7040593e4c672040504720193c27204720593db63087204db6308a791c172047202"
  }
}
