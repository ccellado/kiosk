package kiosk.oraclepool

import kiosk.ECC
import kiosk.ergo._
import org.scalatest.{Matchers, PropSpec}

class FixedEpochPoolDemo extends PropSpec with FixedEpochPool with Matchers {
  val minBoxValue = 2000000
  override lazy val livePeriod = 4 // blocks
  override lazy val prepPeriod = 4 // blocks
  override lazy val buffer = 2 // blocks

  override lazy val oracleTokenId: Array[Byte] = "12caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed".decodeHex
  override lazy val poolTokenId: Array[Byte] = "b662db51cf2dc39f110a021c2a31c74f0a1a18ffffbf73e8a051a7b8c0f09ebc".decodeHex

  override lazy val oracleReward = 2000000 // Nano ergs. One reward per data point to be paid to oracle
  lazy val addresses = Seq(
    "9iHunbPfq8ARpiJXc4vjmwvseeHWjmgeC797vSrdHSLNKxvKsYo",
    "9fj9NJpzo13HfNyCdzyfNP8zAfjiTY3pys1JP5wCzez8MiP8QbF",
    "9ebeQK9oJpDpTZSfqk6wdaHt3x1aUUba9S8dMufTpyQQYvE2XKU",
    "9fcrXXaJgrGKC8iu98Y2spstDDxNccXSR9QjbfTvtuv7vJ3NQLk"
  ).toArray

  override lazy val minPoolBoxValue = oracleReward * (addresses.size + 1) + minBoxValue // how much min must exist in oracle pool box

  override lazy val oraclePubKeys = addresses.map(ECC.addressToGroupElement)

  property("Addresses check") {
    println("minPoolBoxValue " + minPoolBoxValue)
    println(s"Live Epoch script length       : ${liveEpochErgoTree.bytes.length}")
    println(s"Live Epoch script complexity   : ${liveEpochErgoTree.complexity}")
    println(s"Epoch prep script length       : ${epochPrepErgoTree.bytes.length}")
    println(s"Epoch prep script complexity   : ${epochPrepErgoTree.complexity}")
    println(s"DataPoint script length        : ${dataPointErgoTree.bytes.length}")
    println(s"DataPoint script complexity    : ${dataPointErgoTree.complexity}")
    println(s"PoolDeposit script length      : ${poolDepositErgoTree.bytes.length}")
    println(s"PoolDeposit script complexity  : ${poolDepositErgoTree.complexity}")

    println("liveEpochAddress: " + liveEpochAddress)
    println("epochPrepAddress: " + epochPrepAddress)
    println("dataPointAddress: " + dataPointAddress)
    println("poolDepositAddress: " + poolDepositAddress)
    println("EpochPrepErgoTree: (for R6) " + KioskErgoTree(epochPrepErgoTree).serialize.encodeHex)

    liveEpochAddress shouldEqual "6By3PvYgScgZTRMU4WghXP3Te4dgS22Es3uWT94RCZG7aastqNDYVE2WVAaVKHUT7ruuRfZevmDCp59qphFSdj7RvVmCCQgY4MntvpSVEbJMu8jzpeQSCtGmU1CSapjn1PEet23RnbwXiHKQz4iRkskPEoJzWaySudwtcor63WVLeQN5hgkEu9xhfTsksu35Rw7xBjRSfMEMDrKEr6qnEX3NkJRk81r33rfBRhAFuYN7V9Y92x1D5NapMpJUAcFy7jBX8YRVGJkuQ16BaZcFExGce9LdS5KynpXjSmTbNYxKAh9pfe2TXU6fTis25GkWfjWmUcCChiJtRMyTkVGkcnvsPywBKYSzyuqf3duvA5rEwCdKuBdFYJ3154M6FkGqB9ViZ4413r7bQMJXqADhmNtGsQ3xW7iTAg4xiqb2NPeupBg4nEFsbVu2o5hW9BFUn8jmfpaFs"
    epochPrepAddress shouldEqual "EumuaTPdZCMANkdzhvMZ5J1teAS8Byfewu2V58CEJYRhV7xs1famJz182pe991Xf5CAjHZtqJrwyeQUr4hkr6qrnhzcHEZ53HPqpJyU4copdrYECw2ukeBnHM6Bj3xYA7rGRpZNowmcrLE98DwnEw2EtPHPbQhXkfiEWAdaPKwU5WwBRYfzrbLr6c5LcBYqvYsNYoHxKnLSXDz7rbK5AvJFDyhL7WprA8Rx7ctuG5M8dRTEbYGKYHK2K8BVva7bYjmuzrWystmMFMYKK8Ts7kamA8fo9qB9pfoQVUT8iiBBseaWYdq6bTC3CnPf6dzRapv1xAEjo1mohfUnGM71c5NDyoPwcC4zV6Lz2Do5nwJdFrUY6Sm9Npu9PPANtPjjRYuTQ7V3jcLvV3SNtWoqBaT1LG8KQuZ7JUttSKtjQU6XgqrZfx6kTBGjMYyqWaSWuPSWVxDaU6ktvbbYoWEMxatBhvyRykvCt96Lh82war5YBFKuVs4jyYi2dN25hU89WqvUNbVvzC67T9J51HTYZ1VwiF7tMFTRz45J4YU6ZtpZStFmK9gdgJ4HuxLNmPSHRw3ggTgCLf6jRb2gRAk5Nrd44HeNzTPRgRCx1gEvTKnKF1qPNw3eYdeczYwQxiS9nRgW81UCf3eyWnTibTDzvnz2zr9BkPFovGimpiN5gJfuoQZqEtQbXJxiMQ7MSnaUCupL73H2qomRA4EsiYUv4N64VAR485ywHBpELNkTCWoWMsszNZhz9dbYFfqTgA3ArtJZkkMuMYPRKVBXE9aNqv5jX3iKho8ccNYpbR"
    dataPointAddress shouldEqual "dtoETUwV6a7h8DZZEbMBtX2xbTQstvEjsvaf5TfzFMdd8bsHJNMtQgRKoiesS7q1QGrin2DTD9Gx3gDWCUPf8UZApWiWqX2neuRh5WdxD73sr477Pod7hnfuMBCPKnXSB8WmwyJTaJgZ5TEsaekHJmeVTM4v53XCESsSzyKLWhhzcbaoJF8oFFqpe8wTgJejAsy3jBtHnFQ7xpVcQohNdGpsxy1pUXFCf18hsKsQfosHsEP3b4XWMfg6JiArQu9Hu2SvyvNRxWbY2Lca2J8Ziqe3cod5ncRxnkWcj48rvmGZTxDgmsHFfPYhzCXx9dUFVHpiK3Hutik8tjGWCbWk3yo2KN5vLYmKVp4UgkPtXPSvJCqxrTaygZ53QeRVwLdmjYeZTCVRwp8KxLnAaRSurhbQTCh1rePK3rcLT31AvWEAd3upzEsit3cJQWvg1wnWqLZwRfkBf6gf4es1eJGoC1go8BC6N9Rg1wX5d1ZEVqGCE9gJFnEzuoropQrL3aVrfbSdbV4mZSqK6fPCbMpzJcCVAtpCZutz2WmURoqotf441jaK5nYCGXk4bvZQtdge5LtWhoaPVtxQzaEkLGwNfPRDUsghUBnNqFvmSn1TCQtw1iuaJTBpTimQVqjEjhR1uyMYqz5kmaDV8XxzZmDG"
    poolDepositAddress shouldEqual "3JxtG85ZnbahbGtpAVj7PmhQ6VXzTD5esFNkcgk5Eege5LHXN6X2FmhF2AfAgsVUEgzgH2ZsgTCDvtaHwUm3dgPfyvFetkXZd9THHLMk6LtdH5vYVMUYmowvyE5qZWm2eFzG4dcHLeo5nRwTF4JbE5qm7GB1iEeuvfYyXSnxUTTmq3VVYrAS2h3rBGRxnZmVRmwpxLjBf8N7o4BqwCeEjVRnTgBddj9bmo6ed4tsAF1759V7ZcKpKuxY2WygJMEeT3kyZtReKkzKEPp7vhZJqQLqWHtL1zoB4iGD5zahXVALTLzFiqTLo7ocWtZ3NJVfCZSLN4eM5Ay72zdst7Ebem9FLeEMskzXxrNaHB4gR5EDYgJNVrmHx1gpmpT7AaGxt4M6w6zRMmH6g91BQkWTmNLo5JZ8946SMQ5L5SpoXDKwGC14Pht6Y3rmc8CUUeeW2TfLEYST4ZK4fq7p1KhxHj1Vem6ZDHmnz5yKraZNPouuG9FxaUgnMVMnEQcnbD87VDt2YSYiU1YrA3mAzkfje9jrykFAzqJu5S7CfkD9AWNs673eg3oeeNobju6nrEvKqdyynmEsgauNbj3Rd51Qx6A3AZLfTMW1N9pRjv1hXHYcaG2pHW8jxo6sc5JQyjfaUCianze3aRFJNNUpxAJ86ehm6RCRvaKojLtPDmVhBjCjLeFMHjATuBmcRfCkpho9Ce7Rh5HPL9E3fNpd7QjDvsp4XTQX1jSiXqatkJLmEHCZ67fYqyf3NmCcomV6enLFMCy2j3pnoM9q1novKx8GNRWC2EtDXb5Q81DnqaBwJwhzAmCsFHvRrS1PDg9VMKchkAdtkwzNHriL1ZpBqet19pqf7AZdVq6Qi3pwWosoZM4Bmfpoa7aHYDyi1xoGfv8iREV8c2FRWoj2ATkDBxqEQh34J3uBvEbxMfMhHLaFQPNp6iRjaT46t2YwTLejL9xfJcpCQmEikWVMeb6EikoMZ1k7kiJWMNVdgcGyRy"
    epochPrepErgoTree.bytes.encodeHex shouldEqual "10070580dac40904000eca02100e040004000e2012caaacb51c89646fac9a3786eb98d0113bd57d68223ccc11754a4f67281daed0500040004100580dac4090402048092f401040201010402058092f4010400d804d601b2a5730000d602b5db6501fed9010263ed93e4c67202050ec5a7938cb2db63087202730100017302d603b17202d6049db072027303d9010441639a8c720401e4c68c72040206057e720305ea02d1edededededededed93c27201e4c6a7060e917203730493db63087201db6308a793e4c672010405720493e4c6720105049ae4c6a70504730592c17201730693e4c672010405720492c1720199c1a77e9c9a720373077308058cb0720286027309730ad901053c400163d802d6078c720501d6088c72070186029a7208730beded8c72070293c2b2a5720800d0cde4c68c720502040792c1b2a5720800730c02b2ad7202d9010563cde4c672050407730d000410040804080404d807d601e4c6a70504d602c1a7d6039272027300d604b2a5730100d605c2a7d606ed93e4c67204060e720593c272047302d6079aa37303eb02eb02d1ededededededed8fa3720191a39a99720173047305720393e4c672040405e4c6a7040593e4c672040504720193db63087204db6308a792c1720472027206d1ededededededed92a37201720393e4c672040405e4c6a7040592e4c672040504720790e4c6720405049a7207730693db63087204db6308a792c1720472027206d1edededed93e4c672040405e4c6a7040593e4c672040504720193c27204720593db63087204db6308a791c172047202"
  }
}
